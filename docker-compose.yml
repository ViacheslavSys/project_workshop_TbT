version: "3.9"

services:
  # База данных
  db:
    image: postgres:15
    container_name: my_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis
  redis:
    image: redis:7
    container_name: my_redis
    restart: always
    ports:
      - "6379:6379"

  # Бэкенд
  backend:
    build: ./backend
    container_name: my_backend
    depends_on:
      - db
      - redis
    environment:
      # База данных
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      
      # Redis
      REDIS_URL: redis://redis:6379/0
      REDIS_TTL: ${REDIS_TTL}
      
      # OpenRouter
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      MODEL: ${MODEL}
      MODEL_ANALYSIS: ${MODEL_ANALYSIS}
    volumes:
      - ./backend:/app
    command: >
      sh -c "alembic upgrade head &&
             uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8000:8000"

  # Фронтенд
  frontend:
    build: ./frontend
    container_name: my_frontend
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Celery Worker
  celery_worker:
    build: ./backend
    container_name: celery_worker
    restart: always
    depends_on:
      - redis
      - db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      REDIS_URL: redis://redis:6379/0
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      MODEL: ${MODEL}
      MODEL_ANALYSIS: ${MODEL_ANALYSIS}
    command: celery -A app.core.celery_app worker --loglevel=info

  # Celery Beat
  celery_beat:
    build: ./backend
    container_name: celery_beat
    restart: always
    depends_on:
      - redis
      - db
      - celery_worker
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      REDIS_URL: redis://redis:6379/0
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      MODEL: ${MODEL}
      MODEL_ANALYSIS: ${MODEL_ANALYSIS}
    command: celery -A app.core.celery_app beat --loglevel=info

volumes:
  postgres_data: